apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-udm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-udm.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-udm.selectorLabels" . | nindent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Chart.Name }}-{{ .Values.namespace }}-net1
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.start.initscp }}
      initContainers: # For IP tables prerouting from port 80 to redirection proxy (port 10096)
      - name: initscp
        image: "{{ .Values.initscpimage.repository }}:{{ .Values.initscpimage.version }}" 
        imagePullPolicy: {{ .Values.initscpimage.pullPolicy }}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: true
          runAsNonRoot: false
          runAsUser: 0
          runAsGroup: 0
    {{- end }}
      containers:
      - name: wavescp
        image: "{{ .Values.wscpimage.repository }}:{{ .Values.wscpimage.version }}"
        imagePullPolicy: {{ .Values.wscpimage.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.wavescpPort }}
          protocol: TCP
        {{- if .Values.start.wavescp }}
        command: ["/bin/bash", "-c"]
        args: ["/root/waveSCP/createEnt.sh; ./wavescp; tail -f /dev/null"]
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        securityContext:
          privileged: true
        env:
          - name: DAEMON_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavedip
      - name: rpscp
        image: "{{ .Values.rpscpimage.repository }}:{{ .Values.rpscpimage.version }}"
        imagePullPolicy: {{ .Values.rpscpimage.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.rpscpPort }}
          protocol: TCP
        {{- if not .Values.start.rpscp }}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: true
      - name: udm
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        imagePullPolicy: {{ .Values.nfimage.pullPolicy }}
        # Debugging command to sleep the pods
        {{- if not .Values.start.udm }}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        resources:
          requests:
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        {{- if .Values.readinessProbe}}
        readinessProbe:
          exec:
            command:
            - sh
            - /scripts/live-ready.sh
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end}}
        {{- if .Values.livenessProbe}}
        livenessProbe:
          exec:
            command:
            - sh
            - /scripts/live-ready.sh
          initialDelaySeconds: 10
          periodSeconds: 5
        {{- end}}
        ports:
        - containerPort: {{ .Values.service.httpPort }}
          name: http
        #{{- if .Values.start.udm}}
        #{{- else}}
        #command:
          #- /bin/sleep
          #- infinity
        #{{- end}}
        env:
          - name: TZ
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: tz     
          - name: INSTANCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: instance
          - name: PID_DIRECTORY
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pidDirectory
          - name: UDM_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmName
          - name: SBI_IF_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiIfName
          - name: SBI_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiPort
          - name: UDM_VERSION_NB
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmVersionNb
          - name: USE_FQDN_DNS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: useFqdnDns
          - name: UDR_IP_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrIpAddress
          - name: UDR_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrPort
          - name: UDR_VERSION_NB
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrVersionNb
          - name: UDR_FQDN
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrFqdn
          - name: F1_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: f1ip
          - name: F2345_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: f2345ip
          - name: GAUTN_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: gautnip
          - name: KAUSF_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: kausfip
          - name: ANNEX_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: annexip
          - name: WAVE_R_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: waverip
          - name: WAVE_SCP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavescpPort
          - name: WAVE_L_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavelip
          - name: RP_SCP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: rpscpPort
          - name: RP_SCP_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: rpscpip
        #{{- if .Values.start.udm}}
        #{{- else}}
        #command:
          #- /bin/sleep
          #- infinity
        #{{- end}}
      volumes:
      {{- if .Values.persistence.sharedvolume}}
      - name: cn5g-pv
        persistenceVolumeClaim:
          claimName: cn5g-pvc
      {{- end }}
      - name: scripts
        configMap:
          name: {{ .Chart.Name }}-health-cm
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 4 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
