apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-smf.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-smf.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-smf.selectorLabels" . | nindent 8 }}
    {{- if .Values.multus.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Chart.Name }}-{{ .Values.namespace }}-net1
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.start.initscp }}
      initContainers: # For IP tables prerouting from port 80 to redirection proxy (port 10096)
      - name: initscp
        image: "{{ .Values.initscpimage.repository }}:{{ .Values.initscpimage.version }}" 
        imagePullPolicy: {{ .Values.initscpimage.pullPolicy }}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: true
          runAsNonRoot: false
          runAsUser: 0
          runAsGroup: 0
    {{- end }}
      containers:
      - name: wavescp
        image: "{{ .Values.wscpimage.repository }}:{{ .Values.wscpimage.version }}"
        imagePullPolicy: {{ .Values.wscpimage.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.wavescpPort }}
          protocol: TCP
        {{- if .Values.start.wavescp }}
        command: ["/bin/bash", "-c"]
        args: ["/root/waveSCP/createEnt.sh; ./wavescp; tail -f /dev/null"]
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        securityContext:
          privileged: true
        env:
          - name: DAEMON_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavedip
      - name: rpscp
        image: "{{ .Values.rpscpimage.repository }}:{{ .Values.rpscpimage.version }}"
        imagePullPolicy: {{ .Values.rpscpimage.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.rpscpPort }}
          protocol: TCP
        {{- if not .Values.start.rpscp }}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: true
      - name: smf
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        imagePullPolicy: {{ .Values.nfimage.pullPolicy }}
        # Debugging command to sleep the pods
        {{- if not .Values.start.smf }}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory | quote }}
            cpu: {{ .Values.resources.requests.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.memory | quote }}
            cpu: {{ .Values.resources.limits.cpu | quote }}
        {{- end}}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        {{- if .Values.readinessProbe}}
        readinessProbe:
          exec:
            command:
            - sh
            - /scripts/live-ready.sh
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end}}
        {{- if .Values.livenessProbe}}
        livenessProbe:
          exec:
            command:
            - sh
            - /scripts/live-ready.sh
          initialDelaySeconds: 10
          periodSeconds: 5
        {{- end}}
        ports:
        - containerPort: {{ .Values.service.n4Port }}
          name: oai-smf
        - containerPort: {{ .Values.service.http1Port }}
          name: http1
          protocol: TCP
        - containerPort: {{ .Values.service.http2Port }}
          name: http2
          protocol: TCP
        env:
          - name: INSTANCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: instance
          - name: PID_DIRECTORY
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pidDirectory
          - name: SMF_INTERFACE_NAME_FOR_N4
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: smfInterfaceNameForN4
          - name: SMF_INTERFACE_NAME_FOR_SBI
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: smfInterfaceNameForSBI
          - name: SMF_INTERFACE_PORT_FOR_SBI
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: smfInterfacePortForSBI
          - name: SMF_INTERFACE_HTTP2_PORT_FOR_SBI
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: smfInterfaceHttp2PortForSBI
          - name: SMF_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: smfApiVersion
          - name: DEFAULT_DNS_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: dnsIpv4Address
          - name: DEFAULT_DNS_SEC_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: dnsSecIpv4Address
          - name: REGISTER_NRF
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: registerNrf
          - name: DISCOVER_UPF
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: discoverUpf
          - name: USE_FQDN_DNS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: useFqdnDns
          - name: AMF_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: amfIpv4Address
          - name: AMF_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: amfPort
          - name: AMF_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: amfApiVersion
          - name: AMF_FQDN
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: amfFqdn
          - name: UDM_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmIpv4Address
          - name: UDM_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmPort
          - name: UDM_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmApiVersion
          - name: UDM_FQDN
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udmFqdn
          - name: NRF_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfIpv4Address
          - name: NRF_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfPort
          - name: NRF_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfApiVersion
          - name: NRF_FQDN
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfFqdn
          - name: UPF_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: upfIpv4Address
          - name: UPF_FQDN_0
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: upfFqdn0
          - name: WAVE_R_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: waverip
          - name: WAVE_SCP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavescpPort
          - name: WAVE_L_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: wavelip
          - name: RP_SCP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: rpscpPort
          - name: RP_SCP_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: rpscpip
        #{{- if .Values.start.smf}}
        #{{- else}}
        #command:
          #- /bin/sleep
          #- infinity
        #{{- end}}
      volumes:
      {{- if .Values.persistence.sharedvolume}}
      - name: cn5g-pv
        persistenceVolumeClaim:
          claimName: cn5g-pvc
      {{- end }}
      - name: scripts
        configMap:
          name: {{ .Chart.Name }}-health-cm
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 4 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
